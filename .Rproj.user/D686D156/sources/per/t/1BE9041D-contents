---
title: "Gaze Following SRCD Analysis"
author: "The Gaze Following Analysis Team"
date: '`r format(Sys.time(), "%a %b %d %X %Y")`'
output: 
  html_document:
    toc: true
    toc_float: true
    number_sections: yes
editor_options: 
  chunk_output_type: inline
---

# Intro

*copied from 04_confirmatory_analysis.Rmd*

This RMarkdown file reports analyses of the primary Gaze Following dataset. It relies on data cached in `03_exclusions.Rmd`.

There are four datasets for MLM models

* d_first: direction of first look (congruent/incongruent) and latency of first shifts. Proportion difference score (c-i)/(c+i)
* d_freq: frequency of looks to congruent vs. incongruent. Proportion difference score (c-i)/(c+i)
* d_duration: fixation duration to congruent vs. incongruent. Proportion difference score (c-i)/(c+i) 
* d_latency: infants' reaction time

And their associated datasets for meta-analysis

* d_first_meta: direction of first look (congruent/incongruent) and latency of first shifts. Proportion difference score (c-i)/(c+i)
* d_freq_meta: frequency of looks to congruent vs. incongruent. Proportion difference score (c-i)/(c+i)
* d_duration_meta: fixation duration to congruent vs. incongruent. Proportion difference score (c-i)/(c+i)
* d_latency_meta: infants' reaction time

```{r setup, echo=FALSE, message=FALSE}
source("helper/common.R")
source("helper/ma_helper.R")
export_figs <- FALSE
```


```{r}
iv_columns <- c("lab", "subid", "trial_num", "age_group", "age_days", "participant_gender", "lang_group", "coding")
dv_columns <- c("first_shift", "latency", "n_shift_congruent", "n_shift_incongruent", "fixation_congruent", "fixation_incongruent")

d <- read_csv("processed_data/03_data_trial_main.csv") %>%
  select(iv_columns, dv_columns) %>%
  mutate_at(vars(lab,subid,age_group, participant_gender, lang_group, first_shift, coding), as.factor) %>%
  mutate_at(vars(age_group, lang_group), fct_rev)

#clean-up
rm(iv_columns, dv_columns)
```

#Filter dataset
The SRCD analysis will include only eye-tracking data, as hand-coded data is still being processed and verified.

```{r}
d <- d %>% filter(coding == "gazepath")
```


##First look

*The proportion of first-shifts to congruent versus incongruent trials by infant*
For this data we look only at the infants first gaze shifts, and examine the proportion of congruent first gaze-shifts across infants.
```{r first-shift_datasets}
d_first <- d %>%
  filter(!is.na(first_shift)) %>% # Select only trials that had a shift
  select(-latency, -n_shift_congruent, -n_shift_incongruent, -fixation_congruent,
         -fixation_incongruent)

d_first_meta <- d_first %>%
  group_by_at(vars(-trial_num)) %>%
  summarise(n = n()) %>%
  spread(key = first_shift, value = n, fill = 0) %>%
  mutate(prop = (congruent-incongruent)/(congruent+incongruent)) %>% # Calculate proportion difference score
  select(-congruent, -incongruent) %>%
  filter(!is.na(prop)) %>%
  group_by(subid, age_group, lang_group, lab) %>%
  summarise(prop = mean(prop, na.rm = TRUE))
```



##Let's start with First-looks

# Pirate plot

```{r first look pirate}
d_first_meta %>%
  group_by(subid, age_group, lang_group) %>%
  summarise(prop = mean(prop, na.rm = TRUE)) %>%
  pirateplot(formula = prop ~ lang_group + age_group, data = ., main = "First look proportion", theme = 1, bar.f.o = .5, bean.f.o = 0, bar.b.col = 1, bar.lwd = .5, bean.b.col = 1, inf.f.o = 0, inf.method = "se")
```

Same-ish thing but with ggplot:
```{r first look ggplot}
d_first_meta %>% 
  group_by(subid, age_group, lang_group) %>% 
  summarise(prop = mean(prop, na.rm = TRUE)) %>% 
  ggplot(aes(x = age_group, y = prop)) + 
  geom_violin(aes(colour = lang_group), alpha = .5) +
  # geom_dotplot(binaxis = "y", stackdir = "center", position = position_dodge(width = 0.9), 
  #              dotsize = .6, alpha = 0.4, aes(fill = lang_group)) +
  geom_point(aes(x = age_group, color= lang_group), line = "black", alpha = .3, position = position_jitterdodge()) +
  stat_summary(fun.y = "mean", geom = "bar", color = "black", aes(fill = lang_group), 
               alpha = .4, position = position_dodge(width = 0.9)) + 
  stat_summary(fun.data = mean_se, geom = "errorbar", width = .5,  aes(group = lang_group), 
               position = position_dodge(width = 0.9)) +
  geom_abline(intercept = 0, lty = 3, slope = 0) +
  ylab("Difference score") +
  xlab("Age Group") +
  scale_colour_manual(name = "Language group", values = c("darkcyan", "darkred")) +
  scale_fill_manual(name = "Language group", values = c("darkcyan", "darkred")) + 
  theme(text = element_text(size = 20), legend.position = "bottom")
```

These plots tell us that across the entire sample, infants first looks were more likely to be to the congruent as opposed to the incongruent. It also looks as though older infants have a greater proportion first-congruent-look. Little obvious evidence for a difference between language groups.

## First_look MLM

```{r first look MLM}
first_glmer <- d_first %>% 
  mutate(age_days = scale(age_days, scale = FALSE)) %>%
  filter(!is.na(first_shift)) %>%
  mutate(first_shift = fct_rev(first_shift)) %>% # So higher numbers mean more looks to congruent
  glmer(first_shift ~ lang_group + age_days + (1|subid) + (1|lab) + (1|trial_num),
  data = .,
  family = binomial
)

summary(first_glmer)

#Tried simplifying this model iteratively; continue to get singular fit

```

##Meta-analysis

```{r meta first look data}
d_z_first <- d_first_meta %>%
  group_by(subid, lab, age_group, lang_group) %>%
  summarise(mean_prop = mean(prop, na.rm = TRUE)) %>%
  group_by(lab, age_group, lang_group) %>%
  summarise(d = mean(mean_prop, na.rm = TRUE) / sd(mean_prop, na.rm = TRUE), 
            n = length(unique(subid)), 
            d_var = d_var_calc(n, d)) %>%
 filter(n >= 10) #Filtering out subgroups with fewer than 10 babies
```

## First look model with language and age

```{r first look meta}
first_meta <- metafor::rma(d ~ lang_group * age_group, vi = d_var, 
                    slab = lab, data = d_z_first, method = "REML") 
summary(first_meta)
```

Ignoring the singular fit of the MLM, both meta and MLM tell us the same story: Older infants had a higher proportion of congruent first-looks, but there was no effect of language group (and no interaction). The meta furthermore suggest that the total sum of moderators is not significant (i.e. some moderators could be pruned). [I think this can be interpreted this way]

#Frequency of congruent gaze shifts

```{r frequency-shifts_data}
d_freq <- d %>%
  select(-first_shift, -latency, -fixation_congruent, - fixation_incongruent) %>%
  filter((n_shift_congruent + n_shift_incongruent) > 0) %>% # Select only trials that had a shift
  gather(key = "object", value = "n_shift", n_shift_congruent, n_shift_incongruent) %>%
  mutate(object = case_when(
    object == "n_shift_congruent" ~ "congruent",
    object == "n_shift_incongruent" ~ "incongruent"
  )) %>%
  mutate(object = as.factor(object))

d_freq_meta <- d  %>%
  group_by_at(vars(-trial_num)) %>%
  select(-first_shift, -latency, -fixation_congruent, - fixation_incongruent) %>%
  filter((n_shift_congruent + n_shift_incongruent) > 0) %>% # Select only trials that had a shift
  mutate(prop = (n_shift_congruent -  n_shift_incongruent)/(n_shift_congruent + n_shift_incongruent)) %>% # Calculate proportion difference score on each trial
  group_by_at(vars(-trial_num, - prop)) %>%
  mutate(prop = mean(prop)) %>% # Average proportion difference score by baby
  group_by(subid, age_group, lang_group, lab) %>%
  summarise(prop = mean(prop, na.rm = TRUE))
```
##Visualization
```{r freq pirate}
pirateplot(formula = prop ~ lang_group + age_group, data = d_freq_meta, main = "Frequency proportion", theme = 1, bar.f.o = .5, bean.f.o = 0, bar.b.col = 1, bar.lwd = .5, bean.b.col = 1, inf.f.o = 0, inf.method = "se")
```

Same-ish thing but with ggplot:
```{r frequency ggplot}
d_freq_meta %>% 
  group_by(subid, age_group, lang_group) %>% 
  summarise(prop = mean(prop, na.rm = TRUE)) %>% 
  ggplot(aes(x = age_group, y = prop)) + 
  geom_violin(aes(colour = lang_group), alpha = .5) +
  # geom_dotplot(binaxis = "y", stackdir = "center", position = position_dodge(width = 0.9), 
  #              dotsize = .6, alpha = 0.4, aes(fill = lang_group)) +
  geom_point(aes(x = age_group, color= lang_group), line = "black", alpha = .3, position = position_jitterdodge()) +
  stat_summary(fun.y = "mean", geom = "bar", color = "black", aes(fill = lang_group), 
               alpha = .4, position = position_dodge(width = 0.9)) + 
  stat_summary(fun.data = mean_se, geom = "errorbar", width = .5,  aes(group = lang_group), 
               position = position_dodge(width = 0.9)) +
  geom_abline(intercept = 0, lty = 3, slope = 0) +
  ylab("Difference score") +
  xlab("Age Group") +
  scale_colour_manual(name = "Language group", values = c("darkcyan", "darkred")) +
  scale_fill_manual(name = "Language group", values = c("darkcyan", "darkred")) + 
  theme(text = element_text(size = 20), legend.position = "bottom")
```

## Frequency LMEM

```{r freq lmem}
#freq_lmer <- d_freq %>% 
#  mutate(age_days = scale(age_days, scale = FALSE)) %>%
#  mutate(object_bin = (as.integer(fct_rev(object)) - 1)) %>% # Recode to binary: congruent = 1, #incongruent = 0
#  lmer(n_shift ~ lang_group*age_days*object + (object|subid) + (lang_group*object|lab) + #(lang_group*object|trial_num),
#  data = .
#)

freq_lmer <- d_freq %>% 
  mutate(age_days = scale(age_days, scale = FALSE)) %>%
  mutate(object_bin = (as.integer(fct_rev(object)) - 1)) %>% # Recode to binary: congruent = 1, incongruent = 0
  lmer(n_shift ~ object + (1|subid),
  data = .
)

summary(freq_lmer)
```
Singular fit, again.  Model reduction to avoid this error leads to the simple model above, of object and random intercepts for subjects (or trial number). 

##Meta-analysis
```{r freq meta dataset}
d_z_freq <- d_freq_meta %>%
  group_by(lab, age_group, lang_group) %>%
  summarise(d = mean(prop, na.rm = TRUE) / sd(prop, na.rm = TRUE), 
            n = length(unique(subid)), 
            d_var = d_var_calc(n, d)) %>%
  filter(n >= 10) #Filtering out subgroups with fewer than 10 babies
```

```{r freq meta}
freq_meta <- metafor::rma(d ~ lang_group * age_group, vi = d_var, 
                    slab = lab, data = d_z_freq, method = "REML") 
summary(freq_meta)
```

This model reveals a similar story as before: older infants make more shifts to the congruent stimuli than do younger infants. No effect of language group. However - the moderator coefficient is significant. Heterogeneity is not significant.


#Duration of LT to congruent objects
```{r duration_dataset}
d_duration <- d %>%
  select(-first_shift, -latency, -n_shift_congruent, -n_shift_incongruent) %>%
  filter(fixation_congruent + fixation_incongruent > 0) %>% # Select only trials that had any looking
  gather(key = "object", value = "duration", fixation_congruent, fixation_incongruent) %>%
  mutate(object = case_when(
    object == "fixation_congruent" ~ "congruent",
    object == "fixation_incongruent" ~ "incongruent"
  )) %>%
  mutate(object = as.factor(object)) %>%
  mutate(duration = log(duration + 1)) # Log-transform duration scores, adding one to deal with zeros

d_duration_meta <- d %>%
  select(-first_shift, -latency, -n_shift_congruent, -n_shift_incongruent) %>%
  filter(fixation_congruent + fixation_incongruent > 0) %>%
  mutate(prop = (fixation_congruent - fixation_incongruent)/(fixation_congruent + fixation_incongruent)) %>% # Calculate proportion difference score
  group_by_at(vars(-trial_num, - prop)) %>%
  mutate(prop = mean(prop)) # Average proportion difference score by baby

```

##Visualization
```{r duration pirate}
pirateplot(formula = prop ~ lang_group + age_group, data = d_duration_meta, main = "Fixation duration proportion", theme = 1, bar.f.o = .5, bean.f.o = 0, bar.b.col = 1, bar.lwd = .5, bean.b.col = 1, inf.f.o = 0, inf.method = "se")
```

Same-ish thing but with ggplot:
```{r duration ggplot}
d_duration_meta %>% 
  group_by(subid, age_group, lang_group) %>% 
  summarise(prop = mean(prop, na.rm = TRUE)) %>% 
  ggplot(aes(x = age_group, y = prop)) + 
  geom_violin(aes(colour = lang_group), alpha = .5) +
  # geom_dotplot(binaxis = "y", stackdir = "center", position = position_dodge(width = 0.9), 
  #              dotsize = .6, alpha = 0.4, aes(fill = lang_group)) +
  geom_point(aes(x = age_group, color= lang_group), line = "black", alpha = .3, position = position_jitterdodge()) +
  stat_summary(fun.y = "mean", geom = "bar", color = "black", aes(fill = lang_group), 
               alpha = .4, position = position_dodge(width = 0.9)) + 
  stat_summary(fun.data = mean_se, geom = "errorbar", width = .5,  aes(group = lang_group), 
               position = position_dodge(width = 0.9)) +
  geom_abline(intercept = 0, lty = 3, slope = 0) +
  ylab("Difference score") +
  xlab("Age Group") +
  scale_colour_manual(name = "Language group", values = c("darkcyan", "darkred")) +
  scale_fill_manual(name = "Language group", values = c("darkcyan", "darkred")) + 
  theme(text = element_text(size = 20), legend.position = "bottom")
```

##Duration LMEM
```{r duration lmem}
duration_lmer <- d_duration %>% 
  mutate(age_days = scale(age_days, scale = FALSE)) %>%
  mutate(object_bin = (as.integer(fct_rev(object)) - 1)) %>% # Recode to binary: congruent = 1, incongruent = 0
  lmer(duration ~ lang_group*age_days*object+ (1|subid) + (1|trial_num),
  data = .
)

summary(duration_lmer)
```

##Meta-analysis
```{r duration meta data}
d_z_dur <- d_duration_meta %>%
  group_by(lab, age_group, lang_group) %>%
  summarise(d = mean(prop, na.rm = TRUE) / sd(prop, na.rm = TRUE), 
            n = length(unique(subid)), 
            d_var = d_var_calc(n, d)) %>%
  filter(n >= 10) #Filtering out subgroups with fewer than 10 babies

```


```{r duration meta}
dur_meta <- metafor::rma(d ~ lang_group * age_group, vi = d_var, 
                    slab = lab, data = d_z_dur, method = "REML") 
summary(freq_meta)
```
Same finding

#Latency to congruent first-shifts
```{r latency_to_congruent_first_shifts_datasets}
d_latency <- d %>%
  select(-n_shift_congruent, -n_shift_incongruent, -fixation_congruent, - fixation_incongruent) %>%
  rename("object" = "first_shift") %>%
  filter(!is.na(object)) %>% # only trials with first shifts
  mutate(latency = log(latency + 1)) # Log transform latency scores, adding one to deal with zeros
  

d_latency_meta <- d %>%
  select(-n_shift_congruent, -n_shift_incongruent, -fixation_congruent, - fixation_incongruent) %>%
  rename("object" = "first_shift") %>%
  filter(!is.na(object)) %>%
  mutate(object = as.factor(object)) %>%
  group_by_at(vars(-trial_num, - latency)) %>%
  mutate(latency = mean(latency)) # Average proportion difference score by baby

```
##Visualization
## Latency
```{r latency pirate}
pirateplot(formula = latency ~ object + lang_group + age_group, data = d_latency_meta, main = "Latency", theme = 6, pal = "southpark", cex.names = .5)
```

Same-ish thing but with ggplot (but only congruent:
```{r latency ggplot}
d_latency_meta %>% 
  filter(object == "congruent") %>%
  group_by(subid, age_group, lang_group) %>% 
  summarise(latency = mean(latency, na.rm = TRUE)) %>% 
    group_by(subid, age_group, lang_group) %>% 
  ggplot(aes(x = age_group, y = latency)) + 
  geom_violin(aes(colour = lang_group), alpha = .5) +
  # geom_dotplot(binaxis = "y", stackdir = "center", position = position_dodge(width = 0.9), 
  #              dotsize = .6, alpha = 0.4, aes(fill = lang_group)) +
  geom_point(aes(x = age_group, color= lang_group), line = "black", alpha = .3, position = position_jitterdodge()) +
  stat_summary(fun.y = "mean", geom = "bar", color = "black", aes(fill = lang_group), 
               alpha = .4, position = position_dodge(width = 0.9)) + 
  stat_summary(fun.data = mean_se, geom = "errorbar", width = .5,  aes(group = lang_group), 
               position = position_dodge(width = 0.9)) +
  geom_abline(intercept = 0, lty = 3, slope = 0) +
  ylab("Latency (ms)") +
  xlab("Age Group") +
  scale_colour_manual(name = "Language group", values = c("darkcyan", "darkred")) +
  scale_fill_manual(name = "Language group", values = c("darkcyan", "darkred")) + 
  theme(text = element_text(size = 20), legend.position = "bottom")
```

First graph where we see something that looks like a potential language-group difference - bilingual (younger) infants may be slower to look at incongruent objects.  However - I just realized that the RR says we will only look at congruent first-looks. 

## Latency LMEM

```{r latency lmem}
latency_lmer <- d_latency %>% 
  mutate(age_days = scale(age_days, scale = FALSE)) %>%
  filter(object == "congruent") %>% 
  lmer(latency ~ lang_group * age_days + (1|subid) + (1|lab) + (1|trial_num),
  data = .
)

summary(latency_lmer)
```
of course this won't converge

##Meta-analysis
```{r latency meta data}
#d_z_latency <- d_latency_meta %>%
#  group_by(lab, age_group, lang_group) %>%
#  summarise(d = mean(prop, na.rm = TRUE) / sd(prop, na.rm = TRUE), 
#            n = length(unique(subid)), 
#            d_var = d_var_calc(n, d)) %>%
#  filter(n >= 10) #Filtering out subgroups with fewer than 10 babies

#I'm not sure how this is working - d_latency and d_latency_meta are the same dfs right now, which #seems off

#playing around 
test <-
d %>% 
  filter(first_shift == "congruent") %>% 
  group_by(lab, age_group, lang_group, subid) %>% 
  summarise(latency = mean(latency)) %>% 
  group_by(lab, age_group, lang_group) %>% 
  summarise(meanL = mean(latency),
         sd = sd(latency))
#I guess what we want then is a d value for the between subject comparisons of age-groupXlanguage-group per lab? 
```

